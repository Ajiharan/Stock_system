/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package product;

import Database.DBconnection;
import com.jtattoo.plaf.DecorationHelper;
import java.awt.HeadlessException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;



/**
 *
 * @author Haran
 */
public class home extends javax.swing.JFrame {
    private final Connection con;
    private PreparedStatement ps;
    private ResultSet rs;
    private Statement st;
    private boolean check_empty=false;
    private DefaultTableModel model,model1;
    /**
     * Creates new form home
     */
    public home() {
        
        con=DBconnection.connectDB();
        initComponents();
        price_error.setText("");
        name_error.setText("");
        cat_error.setText("");
        btn_delete.setEnabled(false);
        btn_update.setEnabled(false);
        btn_cancel.setEnabled(false);
      
        display();
        setCombo();
        check_combo();
      
    }
    private void check_combo(){
          if(combo_category.getItemCount()<= 0){
            btn_add.setEnabled(false);
            btn_clear.setEnabled(false);
            cat_error.setText("Add some category");
        }
        else{
            
              btn_add.setEnabled(true);
            cat_error.setText("");
        }    
    }
    public  void reset_combo(){
       combo_category.removeAllItems();
       setCombo();
       display();
       check_combo();
    }
    private void setCombo(){
        String sql="select  * from product_category";
        try{
            st=con.createStatement();
            rs=st.executeQuery(sql);
            while(rs.next()){
                combo_category.addItem(rs.getString(2));
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane, e);
        }
        finally{
            try {
                st.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
   
    private void display(){
           String sql = "SELECT * FROM products";
           try{
               st=con.createStatement();
               rs=st.executeQuery(sql); 
           }
           catch(SQLException e){
               JOptionPane.showMessageDialog(null, e);
           }
           finally{
               
                product_table.setModel(DbUtils.resultSetToTableModel(rs));//show all employee details in a table
                model=(DefaultTableModel)product_table.getModel();//currently add
                try {
                    st.close();
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                }
             
           }
           int rows=0;
           try{
               st=con.createStatement();
               rs=st.executeQuery(sql);
               while(rs.next()){
                   rows++;
                   String id=rs.getString(1);
                   pr_id.setText("PR-"+(Integer.parseInt(id.substring(3,8)) + 1));
               }
               if(rows < 1){
                   pr_id.setText("PR-11111");
               }            
           }
           catch(NumberFormatException | SQLException e){
                 pr_id.setText("PR-11111");
                JOptionPane.showMessageDialog(null, e);
           }
           finally{
             
                try {
                    rs.close();
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pr_id = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        txt_price = new javax.swing.JTextField();
        scroll_pane1 = new javax.swing.JScrollPane();
        product_table = new javax.swing.JTable();
        btn_add = new javax.swing.JButton();
        name_error = new javax.swing.JLabel();
        price_error = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        product_search_table = new javax.swing.JTable();
        txt_search = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btn_clear = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        combo_category = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btn_add_category = new javax.swing.JButton();
        cat_error = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(5);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("product_name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("product_price");

        pr_id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pr_id.setText("product_id");

        txt_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_priceKeyReleased(evt);
            }
        });

        product_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        product_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        product_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                product_tableMouseClicked(evt);
            }
        });
        scroll_pane1.setViewportView(product_table);

        btn_add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        name_error.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        name_error.setForeground(new java.awt.Color(255, 0, 0));
        name_error.setText("Error");

        price_error.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        price_error.setForeground(new java.awt.Color(255, 0, 0));
        price_error.setText("Error");

        product_search_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        product_search_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        product_search_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                product_search_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(product_search_table);

        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Search Products");

        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_clear.setText("clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_cancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_cancel.setText("cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Category");

        btn_add_category.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_add_category.setText("Add Category");
        btn_add_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_categoryActionPerformed(evt);
            }
        });

        cat_error.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cat_error.setForeground(new java.awt.Color(255, 0, 0));
        cat_error.setText("Error");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_add)
                                .addGap(27, 27, 27)
                                .addComponent(btn_clear)
                                .addGap(27, 27, 27)
                                .addComponent(btn_update)
                                .addGap(18, 18, 18)
                                .addComponent(btn_delete)
                                .addGap(26, 26, 26)
                                .addComponent(btn_cancel))
                            .addComponent(pr_id))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combo_category, 0, 193, Short.MAX_VALUE)
                            .addComponent(txt_name)
                            .addComponent(txt_price))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(name_error, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cat_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(price_error, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_add_category)
                                .addGap(35, 35, 35)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(scroll_pane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pr_id)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_error)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(combo_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cat_error))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price_error))
                                .addGap(32, 32, 32)
                                .addComponent(btn_add))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_clear)
                                .addComponent(btn_update)
                                .addComponent(btn_delete)
                                .addComponent(btn_cancel)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                            .addComponent(scroll_pane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btn_add_category)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
       
     
       
       if(!check_variables()){
          add_details();
          txt_name.setText("");
          txt_price.setText("");
       }
       
    }//GEN-LAST:event_btn_addActionPerformed

    private boolean check_variables(){
           check_empty =false;
        if(txt_name.getText().isEmpty()){
            txt_name.setFocusable(true);
            name_error.setText("Name is Empty");
            check_empty=true;
        }
        else{
            name_error.setText("");
        }
       if(txt_price.getText().isEmpty()){
           price_error.setText("Price is Empty");
            check_empty=true;
        }
       else{
           price_error.setText("");
       }
       return check_empty;
    }
    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        txt_name.setText("");
        txt_price.setText("");
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        btn_update.setEnabled(false);
        btn_delete.setEnabled(false);
        txt_name.setText("");
        txt_price.setText("");
        btn_add.setEnabled(true);
        btn_cancel.setEnabled(false);
        display();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
            
        if(!check_variables()){
            String sql="update products set name= ?,price= ?,category= ? where id='"+pr_id.getText()+"'";
            try {
                ps= con.prepareStatement(sql);
                ps.setString(1, txt_name.getText());
                ps.setString(2,txt_price.getText());
                ps.setString(3,combo_category.getSelectedItem().toString()
                );
                int rowsAffected=ps.executeUpdate();

                if(rowsAffected > 0){
                    JOptionPane.showMessageDialog(null,"Update sucessfully!!!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                    try {
                        ps.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                    }

            }

            display();
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
      String sql="delete from products where id='"+pr_id.getText()+"'";
        try {
            ps=con.prepareStatement(sql);
            int rowdeleted=ps.executeUpdate();
            
            if(rowdeleted > 0){
                JOptionPane.showMessageDialog(null,"sucessfully deleted");
            }
            else{
                JOptionPane.showMessageDialog(null,"cannot delete");
            }
        } catch (SQLException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
          try {
              ps.close();
          } catch (SQLException ex) {
              Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
          }
        }
        
        display();    
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased

        String sql="select * from products where id or name like '"+txt_search.getText()+"%'";
        try {
            st=con.createStatement();
            rs=st.executeQuery(sql);
            
        } catch (SQLException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
             product_search_table.setModel(DbUtils.resultSetToTableModel(rs));//show all employee details in a table
             model1=(DefaultTableModel)product_search_table.getModel();//currently add
            try {
                 st.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }    
    }//GEN-LAST:event_txt_searchKeyReleased

    private void product_search_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_product_search_tableMouseClicked
         txt_name.setText(String.valueOf(model1.getValueAt(product_search_table.getSelectedRow(),1)));
        txt_price.setText(String.valueOf(model1.getValueAt(product_search_table.getSelectedRow(),2)));
        pr_id.setText(String.valueOf(model1.getValueAt(product_search_table.getSelectedRow(),0)));
        
           btn_update.setEnabled(true);
        btn_delete.setEnabled(true);
        btn_cancel.setEnabled(true);
        btn_add.setEnabled(false);
    }//GEN-LAST:event_product_search_tableMouseClicked

    private void txt_priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_priceKeyReleased
        String value=txt_price.getText();
        try{
            Double.parseDouble(value);
        }
        catch(NumberFormatException e){
            txt_price.setText("");
            JOptionPane.showMessageDialog(null,"Field should include only numbers");
        }
        
    }//GEN-LAST:event_txt_priceKeyReleased

    private void btn_add_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_categoryActionPerformed
        CategoryTable cat=new CategoryTable();
        cat.getHomeObject(this);
        cat.setVisible(true);
        
    }//GEN-LAST:event_btn_add_categoryActionPerformed

    private void product_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_product_tableMouseClicked
        txt_name.setText(String.valueOf(model.getValueAt(product_table.getSelectedRow(),1)));
        txt_price.setText(String.valueOf(model.getValueAt(product_table.getSelectedRow(),2)));
        pr_id.setText(String.valueOf(model.getValueAt(product_table.getSelectedRow(),0)));
        combo_category.setSelectedItem(String.valueOf(model.getValueAt(product_table.getSelectedRow(),3)));

        btn_update.setEnabled(true);
        btn_delete.setEnabled(true);
        btn_cancel.setEnabled(true);
        btn_add.setEnabled(false);

    }//GEN-LAST:event_product_tableMouseClicked
    private void add_details() {
          String sql="insert into products(id,name,price,category) values(?,?,?,?)";
          
          try{
              ps=con.prepareStatement(sql);
              ps.setString(1,pr_id.getText());
              ps.setString(2,txt_name.getText());
              ps.setDouble(3,Double.parseDouble(txt_price.getText()));
              ps.setString(4,combo_category.getSelectedItem().toString());
              ps.execute();
              JOptionPane.showMessageDialog(null, "Sucessfully Added");     
          }
          
          catch(HeadlessException | NumberFormatException | SQLException e){
              JOptionPane.showMessageDialog(null, e);
          }
          finally{
              try {
                  ps.close();
              } catch (SQLException ex) {
                  Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
            display();
       
    }
    
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
                      UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
                      DecorationHelper.decorateWindows(false);
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_add_category;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel cat_error;
    private javax.swing.JComboBox<String> combo_category;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name_error;
    private javax.swing.JLabel pr_id;
    private javax.swing.JLabel price_error;
    private javax.swing.JTable product_search_table;
    private javax.swing.JTable product_table;
    private javax.swing.JScrollPane scroll_pane1;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

  
}
